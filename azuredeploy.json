{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "key_value": {
      "type": "SecureString"
    },
    "siteName": {
      "defaultValue": "CiellosCompressDecompress",
      "type": "String"
    },
    "serverPlan": {
      "defaultValue": "ASP-CompressDecompress-8689",
      "type": "String"
    },
    "publisherName": {
      "defaultValue": "Ciellos",
      "type": "String"
    }
  },
  "variables": {
    "apiKey": "[concat(parameters('siteName'), '-key')]",
    "serviceApimName": "[concat(parameters('siteName'), '-apim')]",
    "storageAccountName": "[concat(parameters('siteName'), 'sa01')]"
  },
  "resources": [
    {
      "type": "Microsoft.ApiManagement/service",
      "apiVersion": "2019-12-01",
      "name": "[variables('serviceApimName')]",
      "location": "Central US",
      "sku": {
        "name": "Consumption",
        "capacity": 0
      },
      "properties": {
        "publisherEmail": "yevgenii.romanov@ciellos.com",
        "publisherName": "[parameters('publisherName')]",
        "notificationSenderEmail": "apimgmt-noreply@mail.windowsazure.com",
        "hostnameConfigurations": [
          {
            "type": "Proxy",
            "hostName": "[concat(variables('serviceApimName'), '.azure-api.net')]",
            "negotiateClientCertificate": false,
            "defaultSslBinding": true
          }
        ],
        "customProperties": {
          "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls10": "False",
          "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls11": "False",
          "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls10": "False",
          "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls11": "False",
          "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Ssl30": "False",
          "Microsoft.WindowsAzure.ApiManagement.Gateway.Protocols.Server.Http2": "False"
        },
        "virtualNetworkType": "None",
        "apiVersionConstraint": {}
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "name": "[variables('storageAccountName')]",
      "location": "centralus",
      "tags": {
        "Description": "Compress and decompress functions for FnO"
      },
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "Storage",
      "properties": {
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        }
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-02-01",
      "name": "[parameters('serverPlan')]",
      "location": "Central US",
      "tags": {
        "Description": "Compress and decompress functions for FnO"
      },
      "sku": {
        "name": "Y1",
        "tier": "Dynamic",
        "size": "Y1",
        "family": "Y",
        "capacity": 0
      },
      "kind": "functionapp",
      "properties": {
        "perSiteScaling": false,
        "maximumElasticWorkerCount": 1,
        "isSpot": false,
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0
      }
    },
    {
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2019-12-01",
      "name": "[concat(variables('serviceApimName'), '/' , parameters('siteName'), '-functions')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('serviceApimName'))]"
      ],
      "properties": {
        "displayName": "Ciellos Compress Decompress functions",
        "apiRevision": "1",
        "description": "Compress Decompress Functions",
        "subscriptionRequired": true,
        "path": "[parameters('siteName')]",
        "protocols": [
          "https"
        ],
        "isCurrent": true
      }
    },
    {
      "type": "Microsoft.ApiManagement/service/backends",
      "apiVersion": "2019-12-01",
      "name": "[concat(variables('serviceApimName'), '/' , parameters('siteName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('serviceApimName'))]"
      ],
      "properties": {
        "description": "[parameters('siteName')]",
        "url": "[concat('https://', parameters('siteName'), '.azurewebsites.net/api')]",
        "protocol": "http",
        "resourceId": "https://management.azure.com/subscriptions/3fd2f0db-c392-4b69-8bd0-348a5b67ce39/resourcegroups/CompressDecompress/providers/Microsoft.Web/sites/CiellosCompressDecompress",
        "credentials": {
          "header": {
            "x-functions-key": [
              "{{ciellostestcd-key}}"
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.ApiManagement/service/namedValues",
      "apiVersion": "2019-12-01",
      "name": "[concat(variables('serviceApimName'), '/' , variables('apiKey'))]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('serviceApimName'))]"
      ],
      "properties": {
        "displayName": "[variables('apiKey')]",
        "tags": [
          "key",
          "function",
          "auto"
        ],
        "secret": true,
        "value": "[parameters('key_value')]"
      }
    },
    {
      "type": "Microsoft.ApiManagement/service/policies",
      "apiVersion": "2019-12-01",
      "name": "[concat(variables('serviceApimName'), '/policy')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('serviceApimName'))]"
      ],
      "properties": {
        "value": "<!--\r\n    IMPORTANT:\r\n    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\r\n    - Only the <forward-request> policy element can appear within the <backend> section element.\r\n    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\r\n    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\r\n    - To add a policy position the cursor at the desired insertion point and click on the round button associated with the policy.\r\n    - To remove a policy, delete the corresponding policy statement from the policy document.\r\n    - Policies are applied in the order of their appearance, from the top down.\r\n-->\r\n<policies>\r\n  <inbound></inbound>\r\n  <backend>\r\n    <forward-request />\r\n  </backend>\r\n  <outbound></outbound>\r\n</policies>",
        "format": "xml"
      }
    },
    {
      "type": "Microsoft.ApiManagement/service/properties",
      "apiVersion": "2019-01-01",
      "name": "[concat(variables('serviceApimName'), '/' , variables('apiKey'))]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('serviceApimName'))]"
      ],
      "properties": {
        "displayName": "[variables('apiKey')]",
        "value": "/BpvF4pggjOMU7NjMPYfpHM8wn9ideRN4YZWZzPvT7lJeTLQhDzzGg==",
        "tags": [
          "key",
          "function",
          "auto"
        ],
        "secret": true
      }
    },

    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('storageAccountName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "properties": {
        "cors": {
          "corsRules": []
        },
        "deleteRetentionPolicy": {
          "enabled": false
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('storageAccountName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "properties": {
        "cors": {
          "corsRules": []
        }
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "name": "[parameters('siteName')]",
      "location": "Central US",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('serverPlan'))]"
      ],
      "tags": {
        "Description": "Compress and decompress functions for FnO"
      },
      "kind": "functionapp",
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(parameters('siteName'), '.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Standard"
          },
          {
            "name": "[concat(parameters('siteName'), '.scm.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Repository"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverPlan'))]",
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "siteConfig": {},
        "scmSiteAlsoStopped": false,
        "clientAffinityEnabled": true,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 1536,
        "dailyMemoryTimeQuota": 0,
        "httpsOnly": false,
        "redundancyMode": "None"
      },
      "resources": [
        {
          "type": "sourcecontrols",
          "name": "web",
          "apiVersion": "2015-08-01",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', parameters('siteName'))]"
          ],
          "properties": {
            "RepoUrl": "https://github.com/remixod/FnO-DMF-Import-Export-Azure-Functions.git",
            "branch": "master",
            "IsManualIntegration": true
          }
        }
      ]
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2018-11-01",
      "name": "[concat(parameters('siteName'), '/web')]",
      "location": "Central US",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('siteName'))]"
      ],
      "tags": {
        "Description": "Compress and decompress functions for FnO"
      },
      "properties": {
        "numberOfWorkers": -1,
        "defaultDocuments": [
          "Default.htm",
          "Default.html",
          "Default.asp",
          "index.htm",
          "index.html",
          "iisstart.htm",
          "default.aspx",
          "index.php"
        ],
        "netFrameworkVersion": "v4.0",
        "phpVersion": "5.6",
        "requestTracingEnabled": false,
        "remoteDebuggingEnabled": false,
        "httpLoggingEnabled": false,
        "logsDirectorySizeLimit": 35,
        "detailedErrorLoggingEnabled": false,
        "publishingUsername": "$CiellosCompressDecompress",
        "scmType": "None",
        "use32BitWorkerProcess": true,
        "webSocketsEnabled": false,
        "alwaysOn": false,
        "managedPipelineMode": "Integrated",
        "virtualApplications": [
          {
            "virtualPath": "/",
            "physicalPath": "site\\wwwroot",
            "preloadEnabled": false
          }
        ],
        "loadBalancing": "LeastRequests",
        "experiments": {
          "rampUpRules": []
        },
        "autoHealEnabled": false,
        "cors": {
          "allowedOrigins": [
            "https://functions.azure.com",
            "https://functions-staging.azure.com",
            "https://functions-next.azure.com"
          ],
          "supportCredentials": false
        },
        "localMySqlEnabled": false,
        "ipSecurityRestrictions": [
          {
            "ipAddress": "Any",
            "action": "Allow",
            "priority": 1,
            "name": "Allow all",
            "description": "Allow all access"
          }
        ],
        "scmIpSecurityRestrictions": [
          {
            "ipAddress": "Any",
            "action": "Allow",
            "priority": 1,
            "name": "Allow all",
            "description": "Allow all access"
          }
        ],
        "scmIpSecurityRestrictionsUseMain": false,
        "http20Enabled": false,
        "minTlsVersion": "1.2",
        "ftpsState": "AllAllowed",
        "reservedInstanceCount": 0
      }
    },
    {
      "type": "Microsoft.Web/sites/functions",
      "apiVersion": "2018-11-01",
      "name": "[concat(parameters('siteName'), '/Compress')]",
      "location": "Central US",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('siteName'))]"
      ],
      "properties": {
        "script_root_path_href": "https://cielloscompressdecompress.azurewebsites.net/admin/vfs/site/wwwroot/Compress/",
        "script_href": "https://cielloscompressdecompress.azurewebsites.net/admin/vfs/site/wwwroot/Compress/run.csx",
        "config_href": "https://cielloscompressdecompress.azurewebsites.net/admin/vfs/site/wwwroot/Compress/function.json",
        "href": "https://cielloscompressdecompress.azurewebsites.net/admin/functions/Compress",
        "config": {},
        "test_data": "{\"method\":\"post\",\"queryStringParams\":[],\"headers\":[],\"body\":\"{\\r\\n\\\"files\\\":[\\r\\n{\\r\\n\\\"name\\\":\\\"test\\\",\\r\\n\\\"content\\\":\\\"qwre\\\"\\r\\n}]\\r\\n}\\r\\n\"}"
      }
    },
    {
      "type": "Microsoft.Web/sites/functions",
      "apiVersion": "2018-11-01",
      "name": "[concat(parameters('siteName'), '/Decompress')]",
      "location": "Central US",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('siteName'))]"
      ],
      "properties": {
        "script_root_path_href": "https://cielloscompressdecompress.azurewebsites.net/admin/vfs/site/wwwroot/Decompress/",
        "script_href": "https://cielloscompressdecompress.azurewebsites.net/admin/vfs/site/wwwroot/Decompress/run.csx",
        "config_href": "https://cielloscompressdecompress.azurewebsites.net/admin/vfs/site/wwwroot/Decompress/function.json",
        "href": "https://cielloscompressdecompress.azurewebsites.net/admin/functions/Decompress",
        "config": {},
        "test_data": "{\"method\":\"post\",\"queryStringParams\":[],\"headers\":[],\"body\":\"\"}"
      }
    },
    {
      "type": "Microsoft.Web/sites/hostNameBindings",
      "apiVersion": "2018-11-01",
      "name": "[concat(parameters('siteName'), '/', parameters('siteName'), '.azurewebsites.net')]",
      "location": "Central US",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('siteName'))]"
      ],
      "properties": {
        "siteName": "[parameters('siteName')]",
        "hostNameType": "Verified"
      }
    },

    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('storageAccountName'), '/default/azure-webjobs-hosts')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('storageAccountName'), '/default/azure-webjobs-secrets')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('storageAccountName'), '/default/cielloscompressdecompress9da3')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/fileServices', variables('storageAccountName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "properties": {
        "shareQuota": 5120
      }
    }
  ]
}